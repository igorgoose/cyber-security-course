 may need a credit card authorizerbut it doesnt have to create the credit card authorizer it just needs to show up empty handed and its given a credit card authorizer to work with the act of creating these associations between application objects is the essence of dependency injection di and is commonly referred to as wiring in this chapter well explore the basics of bean wiring using spring di is the most elemental thing spring does so these are techniques youll use almost every time you develop spring based applications there are many ways to wire beans in spring to begin lets take a moment to get a feel for the three most common approaches for configuring the spring container as mentioned in chapter the spring container is responsible for creating the beans in your application and coordinating the relationships between those objects via di but its your responsibility as a developer to tell spring which beans to create and how to wire them together when it comes to expressing a bean wiring specification spring is incredibly flexible offering three primary wiring mechanisms its great that you have many choices about how to wire beans in spring but at some point you must select one theres no single right answer here any choice you make must be suitable for you and your project and who says that you must make one choice springs configuration styles are mix and match so you could choose xml to wire up some beans use springs java based configuration javaconfig for other beans and let other beans be automatically discovered by spring even so my recommendation is to lean on automatic configuration as much as you can the less configuration you have to do explicitly the better when you must explicitly configure beans such as when youre configuring beans for which you dont maintain the source code id favor the type safe and more powerful javaconfig over xml finally fall back on xml only in situations where theres a convenient xml namespace you want to use that has no equiva