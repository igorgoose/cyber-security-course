spring avoids as much as possible littering your application code with its api spring almost never forces you to implement a spring specific interface or extend a spring specific class instead the classes in a spring based application often have no indication that theyre being used by spring at worst a class may be annotated with one of springs annotations but its otherwise a pojo as you can see this is a simple garden variety java classa pojo nothing special about it indicates that its a spring component springs non invasive programming model means this class could function equally well in a spring application as it could in a non spring application despite their simple form pojos can be powerful one of the ways spring empowers pojos is by assembling them using di lets see how di can help keep application objects decoupled from each other the phrase dependency injection may sound intimidating conjuring up notions of a complex programming technique or design pattern but as it turns out