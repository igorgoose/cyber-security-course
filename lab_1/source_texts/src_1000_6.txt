oint lets look at braveknightin the next listing a knight whos not only brave butalso capable of embarking on any kind of quest thatcomes along as you can see braveknight unlike damselrescuingknight doesnt create his ownquest instead hes given a quest at construction time as a constructor argument thisis a type of di known as constructor injection whats more the quest hes given is typed as quest an interface that all quests implement so braveknight could embark on a rescuedamselquest a slaydragonquest amakeroundtablerounderquest or any other quest implementation hes given the point is that braveknight isnt coupled to any specific implementation ofquest it doesnt matter to him what kind of quest hes asked to embark on as long asit implements the quest interface thats the key benefit of diloose coupling if anobject only knows about its dependencies by their interface not by their implementation or how theyre instantiated then the dependency can be swapped out with a different implementat